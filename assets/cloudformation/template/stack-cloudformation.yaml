AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Template OIDC role Repo v2.0 - 10/04/2025 

Parameters:
  Versao:
    Type: String
    Default: 0
  Env:
    Description: stack environment
    Type: String
  providerURL:
    Type: String
  providerURL2:
    Type: String
  ServiceAccountName:
    Type: String
    Default: sa-go-worker-webhook
  K8Namespace:
    Type: String
    Description: Namespace
    
Mappings:
  Tag:
    service:
      value: go-worker-webhook
    owner:
      value: architecture
    platform:
      value: poc
    application:
      value: go-worker-webhook
    component:
      value: go-worker-webhook
    PCIClassification:
      value: non-pci
Resources:
  OIDCRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: OIDCRoleGoWorkerWebHook
      AssumeRolePolicyDocument:
        Fn::Sub:
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              { 
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${eksId}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                    "StringEquals": {
                      "${eksEndpoint}:sub": "system:serviceaccount:${K8Namespace}:${ServiceAccountName}"
                    }
                  }
                },
              { 
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${eksId2}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                    "StringEquals": {
                      "${eksEndpoint2}:sub": "system:serviceaccount:${K8Namespace}:${ServiceAccountName}"
                    }
                  }
                }
              ]
            }
        - eksId: !Select [4, !Split ["/", !Ref providerURL]]
          eksEndpoint: !Select [1, !Split ["//", !Ref providerURL]]
          eksId2: !Select [4, !Split ["/", !Ref providerURL2]]
          eksEndpoint2: !Select [1, !Split ["//", !Ref providerURL2]]
      Policies:
      - PolicyName: OIDCRoleGoWorkerWebHookPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action: #TODO add custom policy for S3
            - s3:PutObject
            Resource: '*'
            Effect: Allow
          - Action: #TODO add custom policy for SQS            
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:CreateQueue
            Resource: '*'
            Effect: Allow
          - Action:
            - kms:Decrypt
            - secretsmanager:GetResourcePolicy
            - secretsmanager:GetSecretValue
            - secretsmanager:DescribeSecret
            - secretsmanager:ListSecretVersionIds
            Resource: '*'
            Effect: Allow
          - Action:
            - elasticfilesystem:DescribeAccessPoints
            - elasticfilesystem:DescribeFileSystems
            - elasticfilesystem:DescribeMountTargets
            - ec2:DescribeAvailabilityZones
            Resource: '*'
            Effect: Allow
          - Action:
            - elasticfilesystem:CreateAccessPoint
            Condition:
              StringLike:
                "aws:RequestTag/efs.csi.aws.com/cluster": true
            Resource: '*'
            Effect: Allow
          - Action:
            - elasticfilesystem:DeleteAccessPoint
            Condition:
              StringEquals:
                "aws:ResourceTag/efs.csi.aws.com/cluster": true
            Resource: '*'
            Effect: Allow  
      Tags:
      - Key: env
        Value:
          Ref: Env
      - Key: service
        Value:
          Fn::FindInMap:
          - Tag
          - service
          - value
      - Key: stack
        Value:
          Fn::Sub: ${AWS::StackName}
      - Key: platform
        Value:
          Fn::FindInMap:
          - Tag
          - platform
          - value
      - Key: application
        Value:
          Fn::FindInMap:
          - Tag
          - application
          - value
      - Key: component
        Value:
          Fn::FindInMap:
          - Tag
          - component
          - value
      - Key: pci_classification
        Value:
          Fn::FindInMap:
          - Tag
          - PCIClassification
          - value
      - Key: owner
        Value:
          Fn::FindInMap:
          - Tag
          - owner
          - value
      - Key: resource
        Value: iam-role-oidc
      - Key: name
        Value: !Sub "oidc iam role"

Outputs:
  OIDCRole:
    Value: !GetAtt 'OIDCRole.Arn'